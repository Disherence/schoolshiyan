C51 COMPILER V9.60.0.0   CODE                                                              04/29/2021 20:27:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN .\Objects\code.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\code
                    -.lst) TABS(2) OBJECT(.\Objects\code.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>  //包含循环左、右移位函数的头文件（_crol_, _cror_）
   3          sbit S1=P1^0;
   4          sbit S2=P1^1;
   5          sbit S3=P1^2;
   6          unsigned char keyval;    
   7          void key_scan(void);    //按键扫描，取键值
   8          void forward(void);       //从上到下闪烁
   9          void backward(void);         //从下到上闪烁
  10          void middleward(void);      //从中间到两边，再从两边到中间
  11          void delay10ms(void);   //按键扫描延时，防抖动
  12          void led_delay(void);
  13          void main(void)
  14          {
  15   1          keyval=0;       //键盘初始化为0
  16   1              while(1)
  17   1              {
  18   2                 key_scan();    //调用键盘扫描函数
  19   2                 switch(keyval)
  20   2                 {
  21   3                     case 1:forward();       //键值为1，从上到下闪烁
  22   3                         break;
  23   3                     case 2:backward();      //键值为2，从下到上闪烁
  24   3                         break;
  25   3               case 3:middleward();       //键值为3，从中间到两边，再从两边到中间
  26   3                         break;
  27   3                 }
  28   2              }
  29   1      }
  30          void key_scan(void)
  31          {
  32   1          P1=0xff;
  33   1              if((P1&0x0f)!=0x0f)   //检测到有键按下
  34   1              {
  35   2                 delay10ms();
  36   2                 if(S1==0)
  37   2                 keyval=1;
  38   2                 if(S2==0)
  39   2                 keyval=2;
  40   2             if(S3==0)
  41   2                 keyval=3;
  42   2          }
  43   1      }
  44          void forward(void)
  45          {
  46   1         P2=0xfe;       //1
  47   1         led_delay();
  48   1         P2=0xfd;     //2
  49   1         led_delay();
  50   1         P2=0xfb;     //3
  51   1         led_delay();
  52   1         P2=0xf7;     //4
  53   1         led_delay();
  54   1         P2=0xef;     //5
C51 COMPILER V9.60.0.0   CODE                                                              04/29/2021 20:27:38 PAGE 2   

  55   1         led_delay();
  56   1         P2=0xdf;     //6
  57   1         led_delay();
  58   1         P2=0xbf;     //7
  59   1         led_delay();
  60   1         P2=0x7f;     //8
  61   1         led_delay();
  62   1      }
  63          
  64          void backward(void)
  65          {
  66   1          P2=0x7f;      //8
  67   1        led_delay();
  68   1          P2=0xbf;      //7
  69   1        led_delay();
  70   1        P2=0xdf;      //6
  71   1        led_delay();
  72   1        P2=0xef;      //5
  73   1        led_delay();
  74   1        P2=0xf7;      //4
  75   1        led_delay();
  76   1        P2=0xfb;      //3
  77   1        led_delay();
  78   1        P2=0xfd;      //2
  79   1        led_delay();
  80   1        P2=0xfe;        //1
  81   1        led_delay();
  82   1      }
  83          
  84          void middleward(void)
  85          {
  86   1         P2=0xe7;
  87   1         led_delay();
  88   1         P2=0xdb;
  89   1         led_delay();
  90   1         P2=0xbd;
  91   1         led_delay();
  92   1         P2=0x7e;
  93   1         led_delay();
  94   1         P2=0xbd;
  95   1         led_delay();
  96   1         P2=0xdb;
  97   1         led_delay();
  98   1      }
  99          void led_delay(void)
 100          {
 101   1          unsigned char i,j;
 102   1              for(i=0;i<220;i++)
 103   1              for(j=0;j<220;j++);
 104   1      }
 105            
 106          void delay10ms(void)
 107          {   
 108   1          unsigned char i,j;
 109   1              for(i=0;i<100;i++)
 110   1              for(j=0;j<100;j++);
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    261    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   CODE                                                              04/29/2021 20:27:38 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
